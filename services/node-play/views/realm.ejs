<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Assembled Realms DEBUG</title>

    <link rel="shortcut icon" href="//www.assembledrealms.com/img/favicon.png">

    <link rel="stylesheet" href="//www.assembledrealms.com/css/root.css">
    <link rel="stylesheet" href="//www.assembledrealms.com/build/css/style.css">

    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="//www.assembledrealms.com/css/bootstrap-theme.css">
    
    <style>
        html, body {
            height:100%;
        }

        #commandBar {
            height: 26px;
            background-color: #777;
        }
        
        #commandBarButtons {
            float: left;
            margin-top: 2px;
            margin-left: 6px;
        }
        
        #commandBarButtons button {
            background: #777;
            color: #e0e0e0;
            border-color: #666;
            text-shadow: none;
        }
		
		#commandBarButtons .active {
			background: #555;
		}
        
        #commandBarButtons button:hover {
            background: #555;
        }
        
        #commandBarButtons .spacer {
            display: inline-block;
            vertical-align: middle;
            background: #666;
            width: 2px;
            border-left: #888 1px solid;
            height: 18px;
            margin-left: 6px;
            margin-right: 6px;
        }
		
		#stats {
			display: inline-block;
			vertical-align: top;
		}
		
		#realmStats {
            text-align: center;
			background-color: #4C4C4C;
			width: 896px;
		}
        
        #serverStats {
            padding: 4px;
            display: inline-block;
        }
		
    </style>
    
</head>

<body style="padding-top: 0px; padding-bottom: 0px; padding-left: 0px;" class="">

<div id="wrapper">
    
    <div id="commandBar">
        <div id="commandBarButtons">
			<button type="button" id="btnReboot" class="btn btn-default btn-xs"><i class="fa fa-refresh fa-fw"></i> Reboot</button>
			<button type="button" id="btnCommand" class="btn btn-default btn-xs"><i class="fa fa-keyboard-o fa-fw"></i> Message -> Server</button>
			<div class="spacer"></div>
            <button type="button" id="btnScreenshot" class="btn btn-default btn-xs"><i class="fa fa-camera-retro fa-fw"></i> Take Screenshot</button>
            <div class="spacer"></div>
            <button type="button" id="btnFPS" class="btn btn-default btn-xs active"><i class="fa fa-check-square-o fa-fw"></i> FPS</button>
            <button type="button" id="btnServerDiagnostics" class="btn btn-default btn-xs active"><i class="fa fa-check-square-o fa-fw"></i> Server CPU MB</button>
        </div>
        <a href="http://www.assembledrealms.com" style="float: right;"><img src="//www.assembledrealms.com/build/img/logo.png"></a>
    </div>
    
    <div id="loading" style="margin: 40px auto; width: 896px; padding: 0;">
        <h4 id="loading_text" style="text-align: center;">Initializing <i class="fa fa-spinner fa-pulse"></i></h4>
        <div class="progress">
            <div id="loading_progress" class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                0%
            </div>
        </div>
    </div>
    
    <div id="container" style="display: none;">
    
        <div id="realm" style="margin: 20px auto; width: 896px; padding: 0;"></div>
        
        <div id="realmStats" class="center-block">
            <div id="serverStats">
                <div style="display: inline-block; font-size: 0.75em; vertical-align: top; margin-top: 6px;">
                    <span style="color: #ffffff;"><span id="cpu_display"></span> CPU <i class="fa fa-square"></i></span>
                    <br />
                    <span style="color: #00ff00;"><span id="mem_display"></span> MB <i class="fa fa-square"></i></span>
                </div>
                <canvas id="chart-server" width="300" height="48" style="display: inline-block;"></canvas>
            </div>
        </div>
    
    </div>
    
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="//<%= host %>:<%= port %>/socket.io/socket.io.js"></script>
	
	<!--<script src="//cdn.socket.io/socket.io-1.2.0.js"></script>-->
    
<% for(var i=0; i<scripts.length; i++) { %>
    <script src="<%= scripts[i] %>"></script>
<% } %>

    <script src="//www.assembledrealms.com/build/js/utilities.js"></script>
    <script src="//www.assembledrealms.com/build/js/stats.min.js"></script>
    <script src="//www.assembledrealms.com/js/keyboard.js"></script>
    <script src="//www.assembledrealms.com/js/pixi.min.js"></script>
	<script src="//www.assembledrealms.com/js/bigscreen.min.js"></script>
    <script src="//www.assembledrealms.com/js/async.js"></script>
    <script src="//www.assembledrealms.com/js/smoothie.js"></script>


    <script>
		var DEBUG   = true;
        var ROOT    = '/realms/<%= id %>/';
        var STATS   = '/realms/<%= id %>/stats';
        var HOST    = window.location.host + ':<%= port %>';
		
		var engine 	= new Engine();
		var stats 	= new Stats();
		
        var __memory_series   = undefined;
        var __cpu_series      = undefined;
        var __memory_span     = undefined;
        var __cpu_span        = undefined;
		var __display_fps	  = true;
		var __display_server  = true;
        var __loading         = false;
		
		$("#btnFPS").on("click", function (e) {
		
			var self = $(this);
		
			if (__display_fps) {
				// Turn off:
				$("#stats").hide();
				__display_fps = false;
				self.removeClass("active");
				self.html('<i class="fa fa-square-o fa-fw"></i> FPS');
			} else {
				// Turn on:
				$("#stats").show();
				__display_fps = true;
				self.addClass("active");
				self.html('<i class="fa fa-check-square-o fa-fw"></i> FPS');
			}
		});
		
		$("#btnServerDiagnostics").on("click", function (e) {
		
			var self = $(this);
		
			if (__display_server) {
				// Turn off:
				$("#serverStats").hide();
				__display_server = false;
				self.removeClass("active");
				self.html('<i class="fa fa-square-o fa-fw"></i> Server CPU MB');
			} else {
				// Turn on:
				$("#serverStats").show();
				__display_server = true;
				self.addClass("active");
				self.html('<i class="fa fa-check-square-o fa-fw"></i> Server CPU MB');
			}
			
			engine.debug(__display_server);
		});
        
        $(document).ready(function () {  
	
			engine.loaded = function () {
			
				if (DEBUG) {
					
					stats.setMode(0); // 0: fps, 1: ms
					document.getElementById("realmStats").appendChild( stats.domElement );
					
					engine.debug(true);
				}
                
                $("#loading").fadeOut(function () {
                    $("#container").fadeIn();
                });
            
				animate();
			};
			
			engine.debugging = function (data) {
				__memory_series.append(new Date().getTime(), data.memory / 1000000 / 512 * 100);
                __memory_span.textContent = parseFloat(data.memory / 1000000).toFixed(2);
                
                __cpu_series.append(new Date().getTime(), data.cpu);
                __cpu_span.textContent = data.cpu + ' %';
			};
            
            engine.loading = function (e) {
                /*
                    _numToLoad: 70
                    _progressChunk: 1.4285714285714286
                */
                if (!__loading) {
                    __loading = true;
                    $("#loading_text").text("Downloading realm assets...");
                }
                
                var string_width = Math.floor(e.progress) + "%";
                
                $("#loading_progress").width(string_width);
                $("#loading_progress").text(string_width)
                $("#loading_progress").attr("aria-valuenow", Math.floor(e.progress));
            }
			
			
			
			function animate() {
				
				if (__display_fps) {
					stats.begin();
				}
				
				engine.render();
				
				if (__display_fps) {
					stats.end();
				}
				
				requestAnimationFrame(animate);

			}
		
            
            var chart 	= new SmoothieChart({millisPerPixel: 100,
									grid: {fillStyle:'#4C4C4C',strokeStyle:'#777777'},
									yRangeFunction: function(range) { 
										return {min: 0, max: (range.max + 10 > 100) ? 100 : range.max + 10}; 
									},
									yMinFormatter: function(min, precision) {
										return parseFloat(min).toFixed(0) + " %";
									},
									yMaxFormatter: function(max, precision) {
										return parseFloat(max).toFixed(0) + " %";
									}});
									 
            var canvas 	= document.getElementById('chart-server');
            
            __memory_series = new TimeSeries();
            __cpu_series 	= new TimeSeries();
            
            __memory_span = document.getElementById('mem_display');
            __cpu_span = document.getElementById('cpu_display');
            
            chart.addTimeSeries(__memory_series, {lineWidth:2.3,strokeStyle:'#00ff00',fillStyle:'rgba(0,255,0,0.11)'});
            chart.addTimeSeries(__cpu_series, {lineWidth:2.3,strokeStyle:'#ffffff',fillStyle:'rgba(255,255,255,0.11)'});
			
			chart.streamTo(canvas, 2000);
			
			engine.initialize( document.getElementById("realm") );
			
            /*
            var socket = io('http://<%= host %>');
            socket.on('connect', function () {
                socket.emit('subscribe', {id: <%= id %>});
            });
            socket.on('stats', function (data) {
                __memory_series.append(new Date().getTime(), data.memory / 1000000 / 512 * 100);
                __memory_span.textContent = parseFloat(data.memory / 1000000).toFixed(2);
                
                __cpu_series.append(new Date().getTime(), data.cpu);
                __cpu_span.textContent = data.cpu + ' %';
            });
            
            setInterval(function() {
                $.get( 'http://debug-01.assembledrealms.com/realms/99/stats', function( data ) {
                    __memory_series.append(new Date().getTime(), data.memory / 1000000 / 512 * 100);
                    __memory_span.textContent = parseFloat(data.memory / 1000000).toFixed(2);
                    
                    __cpu_series.append(new Date().getTime(), data.cpu);
                    __cpu_span.textContent = data.cpu + ' %';
                });
            }, 2000);
            */
            
            
        });
    </script>
    
</div>
</body>
</html>