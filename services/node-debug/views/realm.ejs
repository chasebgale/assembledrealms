  <div id="commandBar" style="background-color: #4C4C4C; padding: 4px;">
    <div id="commandBarButtons">
      <button type="button" id="btnReboot" class="btn btn-default btn-xs">
        <i class="fa fa-refresh fa-fw"></i> Reboot
      </button>
      <button type="button" id="btnCommand" class="btn btn-default btn-xs">
        <i class="fa fa-keyboard-o fa-fw"></i> Message -> Server
      </button>
      <div class="spacer"></div>
      <button type="button" id="btnScreenshot" class="btn btn-default btn-xs">
        <i class="fa fa-camera-retro fa-fw"></i> Take Screenshot
      </button>
      <div class="spacer"></div>
      <button type="button" id="btnFPS" class="btn btn-default btn-xs active">
        <i class="fa fa-check-square-o fa-fw"></i> FPS
      </button>
      <button type="button" id="btnServerDiagnostics" class="btn btn-default btn-xs active">
        <i class="fa fa-check-square-o fa-fw"></i> Server CPU MB
      </button>
    </div>
    <!--
    <a href="http://www.assembledrealms.com" style="float: right;">
      <img src="//www.assembledrealms.com/build/img/logo.png">
    </a>
    -->
  </div>

  <div id="container">
  
    <div style="margin: 20px auto; width: 896px; padding: 0; background-color: black;">
      <div id="realm" style="margin: 0; width: 896px; padding: 0; display: none;"></div>
      <div id="queue" style="margin: 0; width: 896px; padding: 0;"></div>
    </div>
    
    <div id="realmStats" class="center-block" style="display: none;">
      <div id="serverStats">
        <div style="display: inline-block; font-size: 0.75em; vertical-align: top; margin-top: 6px;">
          <span style="color: #ffffff;"><span id="cpu_display"></span> CPU <i class="fa fa-square"></i></span>
          <br />
          <span style="color: #00ff00;"><span id="mem_display"></span> MB <i class="fa fa-square"></i></span>
        </div>
        <canvas id="chart-server" width="300" height="48" style="display: inline-block;"></canvas>
      </div>
    </div>
  
  </div>
  
  <script type="text/javascript">
		var DEBUG   = true;
    var HOST    = '<%= host %>:<%= port %>';
    var RAWHOST = '<%= host %>';
    var QUEUE   = <%= queue %>;
    var USERID  = <%= userID %>;
    
    var OWNER   = false;
    var ROOT    = '//' + RAWHOST + '/realms/<%= id %>/';
    var STATS   = '//' + RAWHOST + '/realms/<%= id %>/stats';
    
    var Loader = function () { }
    Loader.prototype = {
      require: function (scripts, callback) {
        this.loadCount      = 0;
        this.totalRequired  = scripts.length;
        this.callback       = callback;

        for (var i = 0; i < scripts.length; i++) {
          this.writeScript(scripts[i]);
        }
      },
      loaded: function (evt) {
        this.loadCount++;

        if (this.loadCount == this.totalRequired && typeof this.callback == 'function') this.callback.call();
      },
      writeScript: function (src) {
        var self = this;
        var s = document.createElement('script');
        s.type = "text/javascript";
        s.async = true;
        s.src = src;
        s.addEventListener('load', function (e) { self.loaded(e); }, false);
        var head = document.getElementsByTagName('head')[0];
        head.appendChild(s);
      }
    }
    
    var l = new Loader();
    
    l.require([
<% for(var i=0; i<scripts.length; i++) { %>
      "//<%= host %><%= scripts[i] %>",
<% } %>
      "//<%= host %>:<%= port %>/socket.io/socket.io.js",
      "/debug/debug.js"
    ], 
    function() {
        // Callback
        console.log('All Scripts Loaded');
        allReady();
    });
  </script>